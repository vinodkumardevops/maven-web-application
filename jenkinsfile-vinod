
node{
  try{  
def mavenhome = tool name: 'maven3.8.6'

echo"The Jobname is: ${env.JOB_NAME}"
echo"The nodename is: ${env.NODE_NAME}"
echo"The buildname is: ${env.BUILD_DISPLAY_NAME}"


properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])

stage('checkoutcode'){

git branch: 'development', credentialsId: '72a66440-3308-4c4a-9af1-370f086cd735', url: 'https://github.com/vinodkumardevops/maven-web-application.git'
}
stage('Build')
{
sh "${mavenhome}/bin/mvn package"
}

/*
stage('excuteSonarQubeReport')
{
sh "${mavenhome}/bin/mvn clean sonar:sonar"
}
stage('UploadArtifactIDintoNexus')
{
sh "${mavenhome}/bin/mvn clean deploy"
}
stage('DeployappintoTomcat')
{
    sshagent(['fe1f9b7c-b72c-4ec6-8a04-dc06fa4d4797']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.42.73:/opt/apache-tomcat-9.0.65/webapps/"
}
}
*/
}//tryclosing
catch(e){
currentBuild.result="FAILURE"
throw(e)
}//catchclosing
finally 
{
slackNotifications(currentBuild.result)
}//finallyclosing
}//NodeClosing

//Code Snippet for sending slack notifications.

def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'
  //buildStatus = buildStatus ? "SUCCESS":"FAILURE"

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "#walmart")
}



